generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  phoneNumber String    @unique
  username    String?
  email       String?   @unique
  password    String?
  bio         String?
  avatarUrl   String?   @default("/uploads/no-user-image.png")
  lastLogin   DateTime?
  status      String    @default("offline")
  is2Fa       Boolean   @default(false)

  createdChats Chat[]
  chats        UserChat[]
  messages     Message[]
  sessions     Session[]
}

model Chat {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  chatName    String?
  isGroup     Boolean @default(false)
  isDeleted   Boolean @default(false)
  lastMessage String  @default("Hola!")

  creatorId Int
  user      User       @relation(fields: [creatorId], references: [id])
  users     UserChat[]
  messages  Message[]
}

model UserChat {
  User       User     @relation(fields: [userId], references: [id])
  userId     Int
  Chat       Chat     @relation(fields: [chatId], references: [id])
  chatId     Int
  assignedAt DateTime @default(now())

  @@id([userId, chatId])
}

model Message {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  content String
  isRead  Boolean @default(false)

  chatId     Int
  chat       Chat         @relation(fields: [chatId], references: [id])
  userId     Int
  user       User         @relation(fields: [userId], references: [id])
  Attachment Attachment[]
}

model Attachment {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  uploadedAt DateTime @default(now())

  fileUrl  String
  fileType String

  messageId Int
  message   Message @relation(fields: [messageId], references: [id])
}

model Session {
  sid         String   @id // Идентификатор сессии (sid)
  createdAt   DateTime @default(now()) // Время создания сессии
  updated     DateTime @default(now()) // Время последнего обновления сессии
  device_name String // Название устройства
  ip_adress   String // IP-адрес устройства
  location    String? // Локация (необязательное поле)
  last_active DateTime // Время последней активности
  is_active   Boolean  @default(true) // Статус активности сессии
  device_type String // Тип устройства

  user    User @relation(fields: [user_id], references: [id]) // Связь с пользователем
  user_id Int // Идентификатор пользователя

  expire DateTime // Время истечения сессии
  sess   Json // Данные сессии в формате JSON

  @@map("session") // Указываем имя таблицы
}
